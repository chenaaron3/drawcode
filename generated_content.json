"{\"lesson_json\":{\"id\":\"growing-a-list-plus\",\"title\":\"Growing a List\",\"description\":\"Use the + operator to concatenate lists\",\"template\":\"orders = [\\\"daisy\\\", \\\"buttercup\\\", \\\"snapdragon\\\", \\\"gardenia\\\", \\\"lily\\\"]\\n\\n# Create new orders here:\\n\\n\\n\\n#broken_prices = [5, 3, 4, 5, 4] + 4\\n\",\"solution\":\"orders = [\\\"daisy\\\", \\\"buttercup\\\", \\\"snapdragon\\\", \\\"gardenia\\\", \\\"lily\\\"]\\n\\n# Create new orders here:\\nnew_orders = [\\\"lilac\\\", \\\"iris\\\"]\\n\\norders_combined = orders + new_orders\\n\\nbroken_prices = [5, 3, 4, 5, 4] + [4]\\n\",\"entrypoint\":\"\",\"inputs\":{},\"time\":6,\"mode\":\"line\"},\"lesson_markdown\":\"# Growing a List\\n\\nWhen we want to add multiple items to a list, we can use `+` to combine two lists (this is also known as concatenation).\\n\\nBelow, we have a list of items sold at a bakery called `items_sold`:\\n\\n```python\\nitems_sold = [\\\"cake\\\", \\\"cookie\\\", \\\"bread\\\"]\\n```\\n\\nSuppose the bakery wants to start selling \\\"biscuit\\\" and \\\"tart\\\":\\n\\n```python\\nitems_sold_new = items_sold + [\\\"biscuit\\\", \\\"tart\\\"]\\nprint(items_sold_new)\\n# Prints ['cake', 'cookie', 'bread', 'biscuit', 'tart']\\n```\\n\\nIn this example, we created a new variable, `items_sold_new`, which contained both the original items sold, and the new items. We can inspect the original `items_sold` and see that it did not change:\\n\\n```python\\nprint(items_sold)\\n# Prints ['cake', 'cookie', 'bread']\\n```\\n\\nWe can only use `+` with other lists. If we try to run this code:\\n\\n```python\\nmy_list = [1, 2, 3]\\nmy_new_list = my_list + 4\\n```\\n\\nwe will get the following error:\\n\\n```\\nTypeError: can only concatenate list (not \\\"int\\\") to list\\n```\\n\\nIf we want to add a single element using `+`, we have to put it into a list with brackets (`[]`):\\n\\n```python\\nmy_new_list = my_list + [4]\\nprint(my_new_list)\\n# Prints [1, 2, 3, 4]\\n```\\n\\nNow, let\u2019s use `+` to practice combining two lists!\",\"lesson_typescript\":\"import { useEffect } from 'react';\\n\\nimport { useLessonStore } from '@/store/lessonStore';\\nimport { useTerminalContainsAll, useVariablesDefined } from '@/utils/taskChecks';\\n\\nimport content from './growing-a-list-plus.md';\\n\\nexport function useGrowingAList(lessonId: string) {\\n  const { startLesson, completeTask, currentTask } = useLessonStore();\\n  const task1Complete = useVariablesDefined({\\n    new_orders: [\\\"lilac\\\", \\\"iris\\\"],\\n  });\\n  const task2Complete = useVariablesDefined({\\n    orders_combined: [\\\"daisy\\\", \\\"buttercup\\\", \\\"snapdragon\\\", \\\"gardenia\\\", \\\"lily\\\", \\\"lilac\\\", \\\"iris\\\"],\\n  });\\n  const task3Complete = useTerminalContainsAll([\\\"TypeError\\\", \\\"can only concatenate list (not \\\\\\\"int\\\\\\\") to list\\\"]);\\n\\n  useEffect(() => {\\n    if (lessonId !== \\\"growing-a-list-plus\\\") return;\\n    startLesson(lessonId, content, [\\n      {\\n        id: \\\"create-new-orders\\\",\\n        title: \\\"Create New Orders\\\",\\n        description:\\n          \\\"Jiho is updating a list of orders. He just received orders for 'lilac' and 'iris'. Create a list called new_orders that contains our new orders.\\\",\\n      },\\n      {\\n        id: \\\"combine-orders\\\",\\n        title: \\\"Combine Orders\\\",\\n        description:\\n          \\\"Use + to create a new list called orders_combined that combines orders with new_orders.\\\",\\n      },\\n      {\\n        id: \\\"fix-broken-prices\\\",\\n        title: \\\"Fix Broken Prices\\\",\\n        description:\\n          \\\"Remove the # and whitespace in front of the list broken_prices. Fix the command by inserting brackets ([]) to avoid errors.\\\",\\n      },\\n    ]);\\n  }, [lessonId, startLesson]);\\n\\n  useEffect(() => {\\n    if (currentTask?.id === \\\"create-new-orders\\\" && task1Complete) {\\n      completeTask();\\n    }\\n    if (currentTask?.id === \\\"combine-orders\\\" && task2Complete) {\\n      completeTask();\\n    }\\n    if (currentTask?.id === \\\"fix-broken-prices\\\" && task3Complete) {\\n      completeTask();\\n    }\\n  }, [\\n    lessonId,\\n    currentTask,\\n    task1Complete,\\n    task2Complete,\\n    task3Complete,\\n    completeTask,\\n  ]);\\n}\\n\"}"