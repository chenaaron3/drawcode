{
  "metadata": {
    "code": "# Create a tuple and assign it to 'original_tuple'\noriginal_tuple = (10, 20, 30)\n\n# Create a new variable that points to the SAME tuple\naliased_tuple = original_tuple\n\n# Try to \"modify\" the tuple\naliased_tuple += (40,)  # This creates a NEW tuple!\n\n# Check what happened\nprint(original_tuple)  # Output: (10, 20, 30) (unchanged)\nprint(aliased_tuple)   # Output: (10, 20, 30, 40) (new object)\n",
    "function": null,
    "inputs": {
      "kwargs": {}
    },
    "stdout": "(10, 20, 30)\n(10, 20, 30, 40)\n",
    "finalLocals": {
      "original_tuple": [
        10,
        20,
        30
      ],
      "aliased_tuple": [
        10,
        20,
        30,
        40
      ]
    }
  },
  "ast": {
    "node_id": 0,
    "children_node_ids": [
      1,
      2,
      3,
      4,
      5
    ],
    "type": "Module",
    "body": [
      {
        "node_id": 1,
        "children_node_ids": [
          6,
          7
        ],
        "type": "Assign",
        "parent_node_id": 0,
        "location": {
          "lineno": 2,
          "col_offset": 0,
          "end_lineno": 2,
          "end_col_offset": 29
        },
        "focus": "original_tuple = (10, 20, 30)",
        "targets": [
          {
            "node_id": 6,
            "children_node_ids": [
              12
            ],
            "type": "Name",
            "parent_node_id": 1,
            "location": {
              "lineno": 2,
              "col_offset": 0,
              "end_lineno": 2,
              "end_col_offset": 14
            },
            "focus": "original_tuple",
            "id": "original_tuple",
            "ctx": {
              "node_id": 12,
              "children_node_ids": [],
              "type": "Store",
              "parent_node_id": 6
            }
          }
        ],
        "value": {
          "node_id": 7,
          "children_node_ids": [
            15,
            16,
            17,
            16
          ],
          "type": "Tuple",
          "parent_node_id": 1,
          "location": {
            "lineno": 2,
            "col_offset": 17,
            "end_lineno": 2,
            "end_col_offset": 29
          },
          "focus": "(10, 20, 30)",
          "elts": [
            {
              "node_id": 15,
              "children_node_ids": [],
              "type": "Constant",
              "parent_node_id": 7,
              "location": {
                "lineno": 2,
                "col_offset": 18,
                "end_lineno": 2,
                "end_col_offset": 20
              },
              "focus": "10",
              "value": 10
            },
            {
              "node_id": 16,
              "children_node_ids": [],
              "type": "Constant",
              "parent_node_id": 7,
              "location": {
                "lineno": 2,
                "col_offset": 22,
                "end_lineno": 2,
                "end_col_offset": 24
              },
              "focus": "20",
              "value": 20
            },
            {
              "node_id": 17,
              "children_node_ids": [],
              "type": "Constant",
              "parent_node_id": 7,
              "location": {
                "lineno": 2,
                "col_offset": 26,
                "end_lineno": 2,
                "end_col_offset": 28
              },
              "focus": "30",
              "value": 30
            }
          ],
          "ctx": {
            "node_id": 16,
            "children_node_ids": [],
            "type": "Load",
            "parent_node_id": 7
          }
        }
      },
      {
        "node_id": 2,
        "children_node_ids": [
          8,
          9
        ],
        "type": "Assign",
        "parent_node_id": 0,
        "location": {
          "lineno": 5,
          "col_offset": 0,
          "end_lineno": 5,
          "end_col_offset": 30
        },
        "focus": "aliased_tuple = original_tuple",
        "targets": [
          {
            "node_id": 8,
            "children_node_ids": [
              12
            ],
            "type": "Name",
            "parent_node_id": 2,
            "location": {
              "lineno": 5,
              "col_offset": 0,
              "end_lineno": 5,
              "end_col_offset": 13
            },
            "focus": "aliased_tuple",
            "id": "aliased_tuple",
            "ctx": {
              "node_id": 12,
              "children_node_ids": [],
              "type": "Store",
              "parent_node_id": 8
            }
          }
        ],
        "value": {
          "node_id": 9,
          "children_node_ids": [
            16
          ],
          "type": "Name",
          "parent_node_id": 2,
          "location": {
            "lineno": 5,
            "col_offset": 16,
            "end_lineno": 5,
            "end_col_offset": 30
          },
          "focus": "original_tuple",
          "id": "original_tuple",
          "ctx": {
            "node_id": 16,
            "children_node_ids": [],
            "type": "Load",
            "parent_node_id": 9
          }
        }
      },
      {
        "node_id": 3,
        "children_node_ids": [
          10,
          11,
          12
        ],
        "type": "AugAssign",
        "parent_node_id": 0,
        "location": {
          "lineno": 8,
          "col_offset": 0,
          "end_lineno": 8,
          "end_col_offset": 22
        },
        "focus": "aliased_tuple += (40,)",
        "target": {
          "node_id": 10,
          "children_node_ids": [
            12
          ],
          "type": "Name",
          "parent_node_id": 3,
          "location": {
            "lineno": 8,
            "col_offset": 0,
            "end_lineno": 8,
            "end_col_offset": 13
          },
          "focus": "aliased_tuple",
          "id": "aliased_tuple",
          "ctx": {
            "node_id": 12,
            "children_node_ids": [],
            "type": "Store",
            "parent_node_id": 10
          }
        },
        "op": {
          "node_id": 11,
          "children_node_ids": [],
          "type": "Add",
          "parent_node_id": 3
        },
        "value": {
          "node_id": 12,
          "children_node_ids": [
            18,
            16
          ],
          "type": "Tuple",
          "parent_node_id": 3,
          "location": {
            "lineno": 8,
            "col_offset": 17,
            "end_lineno": 8,
            "end_col_offset": 22
          },
          "focus": "(40,)",
          "elts": [
            {
              "node_id": 18,
              "children_node_ids": [],
              "type": "Constant",
              "parent_node_id": 12,
              "location": {
                "lineno": 8,
                "col_offset": 18,
                "end_lineno": 8,
                "end_col_offset": 20
              },
              "focus": "40",
              "value": 40
            }
          ],
          "ctx": {
            "node_id": 16,
            "children_node_ids": [],
            "type": "Load",
            "parent_node_id": 12
          }
        }
      },
      {
        "node_id": 4,
        "children_node_ids": [
          13
        ],
        "type": "Expr",
        "parent_node_id": 0,
        "location": {
          "lineno": 11,
          "col_offset": 0,
          "end_lineno": 11,
          "end_col_offset": 21
        },
        "focus": "print(original_tuple)",
        "value": {
          "node_id": 13,
          "children_node_ids": [
            19,
            20
          ],
          "type": "Call",
          "parent_node_id": 4,
          "location": {
            "lineno": 11,
            "col_offset": 0,
            "end_lineno": 11,
            "end_col_offset": 21
          },
          "focus": "print(original_tuple)",
          "func": {
            "node_id": 19,
            "children_node_ids": [
              16
            ],
            "type": "Name",
            "parent_node_id": 13,
            "location": {
              "lineno": 11,
              "col_offset": 0,
              "end_lineno": 11,
              "end_col_offset": 5
            },
            "focus": "print",
            "id": "print",
            "ctx": {
              "node_id": 16,
              "children_node_ids": [],
              "type": "Load",
              "parent_node_id": 19
            }
          },
          "args": [
            {
              "node_id": 20,
              "children_node_ids": [
                16
              ],
              "type": "Name",
              "parent_node_id": 13,
              "location": {
                "lineno": 11,
                "col_offset": 6,
                "end_lineno": 11,
                "end_col_offset": 20
              },
              "focus": "original_tuple",
              "id": "original_tuple",
              "ctx": {
                "node_id": 16,
                "children_node_ids": [],
                "type": "Load",
                "parent_node_id": 20
              }
            }
          ],
          "keywords": []
        }
      },
      {
        "node_id": 5,
        "children_node_ids": [
          14
        ],
        "type": "Expr",
        "parent_node_id": 0,
        "location": {
          "lineno": 12,
          "col_offset": 0,
          "end_lineno": 12,
          "end_col_offset": 20
        },
        "focus": "print(aliased_tuple)",
        "value": {
          "node_id": 14,
          "children_node_ids": [
            21,
            22
          ],
          "type": "Call",
          "parent_node_id": 5,
          "location": {
            "lineno": 12,
            "col_offset": 0,
            "end_lineno": 12,
            "end_col_offset": 20
          },
          "focus": "print(aliased_tuple)",
          "func": {
            "node_id": 21,
            "children_node_ids": [
              16
            ],
            "type": "Name",
            "parent_node_id": 14,
            "location": {
              "lineno": 12,
              "col_offset": 0,
              "end_lineno": 12,
              "end_col_offset": 5
            },
            "focus": "print",
            "id": "print",
            "ctx": {
              "node_id": 16,
              "children_node_ids": [],
              "type": "Load",
              "parent_node_id": 21
            }
          },
          "args": [
            {
              "node_id": 22,
              "children_node_ids": [
                16
              ],
              "type": "Name",
              "parent_node_id": 14,
              "location": {
                "lineno": 12,
                "col_offset": 6,
                "end_lineno": 12,
                "end_col_offset": 19
              },
              "focus": "aliased_tuple",
              "id": "aliased_tuple",
              "ctx": {
                "node_id": 16,
                "children_node_ids": [],
                "type": "Load",
                "parent_node_id": 22
              }
            }
          ],
          "keywords": []
        }
      }
    ],
    "type_ignores": []
  },
  "relationships": [],
  "trace": [
    {
      "line_number": 2,
      "locals": {},
      "delta": null,
      "object_table": {},
      "var_table": {},
      "steps": [
        {
          "step": 0,
          "event": "before_statement",
          "focus": "original_tuple = (10, 20, 30)",
          "node_id": 1
        },
        {
          "step": 1,
          "event": "before_expression",
          "focus": "(10, 20, 30)",
          "node_id": 7
        },
        {
          "step": 2,
          "event": "after_expression",
          "focus": "(10, 20, 30)",
          "node_id": 7,
          "value": [
            10,
            20,
            30
          ]
        },
        {
          "step": 3,
          "event": "after_statement",
          "focus": "original_tuple = (10, 20, 30)",
          "node_id": 1,
          "locals": {
            "original_tuple": [
              10,
              20,
              30
            ]
          },
          "object_table": {
            "4321780160": {
              "type": "int",
              "value": 10,
              "isCollection": false
            },
            "4321780480": {
              "type": "int",
              "value": 20,
              "isCollection": false
            },
            "4321780800": {
              "type": "int",
              "value": 30,
              "isCollection": false
            },
            "4314358528": {
              "type": "tuple",
              "value": [
                4321780160,
                4321780480,
                4321780800
              ],
              "isCollection": true
            }
          },
          "var_table": {
            "original_tuple": 4314358528
          }
        }
      ]
    },
    {
      "line_number": 5,
      "locals": {
        "original_tuple": [
          10,
          20,
          30
        ]
      },
      "delta": {
        "original_tuple": {
          "0": 10,
          "1": 20,
          "2": 30
        }
      },
      "object_table": {
        "4321780160": {
          "type": "int",
          "value": 10,
          "isCollection": false
        },
        "4321780480": {
          "type": "int",
          "value": 20,
          "isCollection": false
        },
        "4321780800": {
          "type": "int",
          "value": 30,
          "isCollection": false
        },
        "4314358528": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800
          ],
          "isCollection": true
        }
      },
      "var_table": {
        "original_tuple": 4314358528
      },
      "steps": [
        {
          "step": 4,
          "event": "before_statement",
          "focus": "aliased_tuple = original_tuple",
          "node_id": 2
        },
        {
          "step": 5,
          "event": "before_expression",
          "focus": "original_tuple",
          "node_id": 9
        },
        {
          "step": 6,
          "event": "after_expression",
          "focus": "original_tuple",
          "node_id": 9,
          "value": [
            10,
            20,
            30
          ]
        },
        {
          "step": 7,
          "event": "after_statement",
          "focus": "aliased_tuple = original_tuple",
          "node_id": 2,
          "locals": {
            "original_tuple": [
              10,
              20,
              30
            ],
            "aliased_tuple": [
              10,
              20,
              30
            ]
          },
          "var_table": {
            "original_tuple": 4314358528,
            "aliased_tuple": 4314358528
          }
        }
      ]
    },
    {
      "line_number": 8,
      "locals": {
        "original_tuple": [
          10,
          20,
          30
        ],
        "aliased_tuple": [
          10,
          20,
          30
        ]
      },
      "delta": {
        "aliased_tuple": {
          "0": 10,
          "1": 20,
          "2": 30
        }
      },
      "object_table": {
        "4321780160": {
          "type": "int",
          "value": 10,
          "isCollection": false
        },
        "4321780480": {
          "type": "int",
          "value": 20,
          "isCollection": false
        },
        "4321780800": {
          "type": "int",
          "value": 30,
          "isCollection": false
        },
        "4314358528": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800
          ],
          "isCollection": true
        }
      },
      "var_table": {
        "original_tuple": 4314358528,
        "aliased_tuple": 4314358528
      },
      "steps": [
        {
          "step": 8,
          "event": "before_statement",
          "focus": "aliased_tuple += (40,)",
          "node_id": 3
        },
        {
          "step": 9,
          "event": "before_expression",
          "focus": "(40,)",
          "node_id": 12
        },
        {
          "step": 10,
          "event": "after_expression",
          "focus": "(40,)",
          "node_id": 12,
          "value": [
            40
          ]
        },
        {
          "step": 11,
          "event": "after_statement",
          "focus": "aliased_tuple += (40,)",
          "node_id": 3,
          "locals": {
            "original_tuple": [
              10,
              20,
              30
            ],
            "aliased_tuple": [
              10,
              20,
              30,
              40
            ]
          },
          "object_table": {
            "4321780160": {
              "type": "int",
              "value": 10,
              "isCollection": false
            },
            "4321780480": {
              "type": "int",
              "value": 20,
              "isCollection": false
            },
            "4321780800": {
              "type": "int",
              "value": 30,
              "isCollection": false
            },
            "4314358528": {
              "type": "tuple",
              "value": [
                4321780160,
                4321780480,
                4321780800
              ],
              "isCollection": true
            },
            "4321781120": {
              "type": "int",
              "value": 40,
              "isCollection": false
            },
            "4314272112": {
              "type": "tuple",
              "value": [
                4321780160,
                4321780480,
                4321780800,
                4321781120
              ],
              "isCollection": true
            }
          },
          "var_table": {
            "original_tuple": 4314358528,
            "aliased_tuple": 4314272112
          }
        }
      ]
    },
    {
      "line_number": 11,
      "locals": {
        "original_tuple": [
          10,
          20,
          30
        ],
        "aliased_tuple": [
          10,
          20,
          30,
          40
        ]
      },
      "delta": {
        "aliased_tuple": {
          "3": 40
        }
      },
      "object_table": {
        "4321780160": {
          "type": "int",
          "value": 10,
          "isCollection": false
        },
        "4321780480": {
          "type": "int",
          "value": 20,
          "isCollection": false
        },
        "4321780800": {
          "type": "int",
          "value": 30,
          "isCollection": false
        },
        "4314358528": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800
          ],
          "isCollection": true
        },
        "4321781120": {
          "type": "int",
          "value": 40,
          "isCollection": false
        },
        "4314272112": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800,
            4321781120
          ],
          "isCollection": true
        }
      },
      "var_table": {
        "original_tuple": 4314358528,
        "aliased_tuple": 4314272112
      },
      "steps": [
        {
          "step": 12,
          "event": "before_statement",
          "focus": "print(original_tuple)",
          "node_id": 4
        },
        {
          "step": 13,
          "event": "before_expression",
          "focus": "print(original_tuple)",
          "node_id": 13
        },
        {
          "step": 14,
          "event": "before_expression",
          "focus": "original_tuple",
          "node_id": 20
        },
        {
          "step": 15,
          "event": "after_expression",
          "focus": "original_tuple",
          "node_id": 20,
          "value": [
            10,
            20,
            30
          ]
        },
        {
          "step": 16,
          "event": "after_expression",
          "focus": "print(original_tuple)",
          "node_id": 13,
          "stdout": "(10, 20, 30)\n"
        },
        {
          "step": 17,
          "event": "after_statement",
          "focus": "print(original_tuple)",
          "node_id": 4
        }
      ]
    },
    {
      "line_number": 12,
      "locals": {
        "original_tuple": [
          10,
          20,
          30
        ],
        "aliased_tuple": [
          10,
          20,
          30,
          40
        ]
      },
      "delta": null,
      "object_table": {
        "4321780160": {
          "type": "int",
          "value": 10,
          "isCollection": false
        },
        "4321780480": {
          "type": "int",
          "value": 20,
          "isCollection": false
        },
        "4321780800": {
          "type": "int",
          "value": 30,
          "isCollection": false
        },
        "4314358528": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800
          ],
          "isCollection": true
        },
        "4321781120": {
          "type": "int",
          "value": 40,
          "isCollection": false
        },
        "4314272112": {
          "type": "tuple",
          "value": [
            4321780160,
            4321780480,
            4321780800,
            4321781120
          ],
          "isCollection": true
        }
      },
      "var_table": {
        "original_tuple": 4314358528,
        "aliased_tuple": 4314272112
      },
      "steps": [
        {
          "step": 18,
          "event": "before_statement",
          "focus": "print(aliased_tuple)",
          "node_id": 5
        },
        {
          "step": 19,
          "event": "before_expression",
          "focus": "print(aliased_tuple)",
          "node_id": 14
        },
        {
          "step": 20,
          "event": "before_expression",
          "focus": "aliased_tuple",
          "node_id": 22
        },
        {
          "step": 21,
          "event": "after_expression",
          "focus": "aliased_tuple",
          "node_id": 22,
          "value": [
            10,
            20,
            30,
            40
          ]
        },
        {
          "step": 22,
          "event": "after_expression",
          "focus": "print(aliased_tuple)",
          "node_id": 14,
          "stdout": "(10, 20, 30, 40)\n"
        },
        {
          "step": 23,
          "event": "after_statement",
          "focus": "print(aliased_tuple)",
          "node_id": 5
        }
      ]
    }
  ],
  "result": null
}