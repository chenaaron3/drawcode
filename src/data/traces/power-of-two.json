{
  "metadata": {
    "code": "def isPowerOfTwo(n):\n    return n > 0 and (n & (n - 1)) == 0\n",
    "function": "isPowerOfTwo",
    "inputs": {
      "kwargs": {
        "n": "16"
      }
    },
    "stdout": "",
    "finalLocals": {
      "n": 16
    }
  },
  "ast": {
    "node_id": 0,
    "children_node_ids": [
      1
    ],
    "type": "Module",
    "body": [
      {
        "node_id": 1,
        "children_node_ids": [
          2,
          3
        ],
        "type": "FunctionDef",
        "parent_node_id": 0,
        "location": {
          "lineno": 1,
          "col_offset": 0,
          "end_lineno": 2,
          "end_col_offset": 39
        },
        "focus": "def isPowerOfTwo(n):\n    return n > 0 and (n & (n - 1)) == 0",
        "name": "isPowerOfTwo",
        "args": {
          "node_id": 2,
          "children_node_ids": [
            4
          ],
          "type": "arguments",
          "parent_node_id": 1,
          "posonlyargs": [],
          "args": [
            {
              "node_id": 4,
              "children_node_ids": [],
              "type": "arg",
              "parent_node_id": 2,
              "location": {
                "lineno": 1,
                "col_offset": 17,
                "end_lineno": 1,
                "end_col_offset": 18
              },
              "focus": "n",
              "arg": "n"
            }
          ],
          "kwonlyargs": [],
          "kw_defaults": [],
          "defaults": []
        },
        "body": [
          {
            "node_id": 3,
            "children_node_ids": [
              5
            ],
            "type": "Return",
            "parent_node_id": 1,
            "location": {
              "lineno": 2,
              "col_offset": 4,
              "end_lineno": 2,
              "end_col_offset": 39
            },
            "focus": "return n > 0 and (n & (n - 1)) == 0",
            "value": {
              "node_id": 5,
              "children_node_ids": [
                6,
                7,
                8
              ],
              "type": "BoolOp",
              "parent_node_id": 3,
              "location": {
                "lineno": 2,
                "col_offset": 11,
                "end_lineno": 2,
                "end_col_offset": 39
              },
              "focus": "n > 0 and (n & (n - 1)) == 0",
              "op": {
                "node_id": 6,
                "children_node_ids": [],
                "type": "And",
                "parent_node_id": 5
              },
              "values": [
                {
                  "node_id": 7,
                  "children_node_ids": [
                    9,
                    10,
                    11
                  ],
                  "type": "Compare",
                  "parent_node_id": 5,
                  "location": {
                    "lineno": 2,
                    "col_offset": 11,
                    "end_lineno": 2,
                    "end_col_offset": 16
                  },
                  "focus": "n > 0",
                  "left": {
                    "node_id": 9,
                    "children_node_ids": [
                      15
                    ],
                    "type": "Name",
                    "parent_node_id": 7,
                    "location": {
                      "lineno": 2,
                      "col_offset": 11,
                      "end_lineno": 2,
                      "end_col_offset": 12
                    },
                    "focus": "n",
                    "id": "n",
                    "ctx": {
                      "node_id": 15,
                      "children_node_ids": [],
                      "type": "Load",
                      "parent_node_id": 9
                    }
                  },
                  "ops": [
                    {
                      "node_id": 10,
                      "children_node_ids": [],
                      "type": "Gt",
                      "parent_node_id": 7
                    }
                  ],
                  "comparators": [
                    {
                      "node_id": 11,
                      "children_node_ids": [],
                      "type": "Constant",
                      "parent_node_id": 7,
                      "location": {
                        "lineno": 2,
                        "col_offset": 15,
                        "end_lineno": 2,
                        "end_col_offset": 16
                      },
                      "focus": "0",
                      "value": 0
                    }
                  ]
                },
                {
                  "node_id": 8,
                  "children_node_ids": [
                    12,
                    13,
                    14
                  ],
                  "type": "Compare",
                  "parent_node_id": 5,
                  "location": {
                    "lineno": 2,
                    "col_offset": 21,
                    "end_lineno": 2,
                    "end_col_offset": 39
                  },
                  "focus": "(n & (n - 1)) == 0",
                  "left": {
                    "node_id": 12,
                    "children_node_ids": [
                      16,
                      17,
                      18
                    ],
                    "type": "BinOp",
                    "parent_node_id": 8,
                    "location": {
                      "lineno": 2,
                      "col_offset": 22,
                      "end_lineno": 2,
                      "end_col_offset": 33
                    },
                    "focus": "n & (n - 1)",
                    "left": {
                      "node_id": 16,
                      "children_node_ids": [
                        15
                      ],
                      "type": "Name",
                      "parent_node_id": 12,
                      "location": {
                        "lineno": 2,
                        "col_offset": 22,
                        "end_lineno": 2,
                        "end_col_offset": 23
                      },
                      "focus": "n",
                      "id": "n",
                      "ctx": {
                        "node_id": 15,
                        "children_node_ids": [],
                        "type": "Load",
                        "parent_node_id": 16
                      }
                    },
                    "op": {
                      "node_id": 17,
                      "children_node_ids": [],
                      "type": "BitAnd",
                      "parent_node_id": 12
                    },
                    "right": {
                      "node_id": 18,
                      "children_node_ids": [
                        19,
                        20,
                        21
                      ],
                      "type": "BinOp",
                      "parent_node_id": 12,
                      "location": {
                        "lineno": 2,
                        "col_offset": 27,
                        "end_lineno": 2,
                        "end_col_offset": 32
                      },
                      "focus": "n - 1",
                      "left": {
                        "node_id": 19,
                        "children_node_ids": [
                          15
                        ],
                        "type": "Name",
                        "parent_node_id": 18,
                        "location": {
                          "lineno": 2,
                          "col_offset": 27,
                          "end_lineno": 2,
                          "end_col_offset": 28
                        },
                        "focus": "n",
                        "id": "n",
                        "ctx": {
                          "node_id": 15,
                          "children_node_ids": [],
                          "type": "Load",
                          "parent_node_id": 19
                        }
                      },
                      "op": {
                        "node_id": 20,
                        "children_node_ids": [],
                        "type": "Sub",
                        "parent_node_id": 18
                      },
                      "right": {
                        "node_id": 21,
                        "children_node_ids": [],
                        "type": "Constant",
                        "parent_node_id": 18,
                        "location": {
                          "lineno": 2,
                          "col_offset": 31,
                          "end_lineno": 2,
                          "end_col_offset": 32
                        },
                        "focus": "1",
                        "value": 1
                      }
                    }
                  },
                  "ops": [
                    {
                      "node_id": 13,
                      "children_node_ids": [],
                      "type": "Eq",
                      "parent_node_id": 8
                    }
                  ],
                  "comparators": [
                    {
                      "node_id": 14,
                      "children_node_ids": [],
                      "type": "Constant",
                      "parent_node_id": 8,
                      "location": {
                        "lineno": 2,
                        "col_offset": 38,
                        "end_lineno": 2,
                        "end_col_offset": 39
                      },
                      "focus": "0",
                      "value": 0
                    }
                  ]
                }
              ]
            }
          }
        ],
        "decorator_list": [],
        "type_params": []
      }
    ],
    "type_ignores": []
  },
  "relationships": [],
  "trace": [
    {
      "line_number": 1,
      "locals": {},
      "delta": null,
      "object_table": {},
      "var_table": {},
      "steps": [
        {
          "step": 0,
          "event": "before_statement",
          "focus": "def isPowerOfTwo(n):\n    return n > 0 and (n & (n - 1)) == 0",
          "node_id": 1
        },
        {
          "step": 1,
          "event": "after_statement",
          "focus": "def isPowerOfTwo(n):\n    return n > 0 and (n & (n - 1)) == 0",
          "node_id": 1
        }
      ]
    },
    {
      "line_number": 2,
      "locals": {
        "n": 16
      },
      "delta": {
        "n": 16
      },
      "object_table": {
        "4344504960": {
          "type": "int",
          "value": 16,
          "isCollection": false
        }
      },
      "var_table": {
        "n": 4344504960
      },
      "steps": [
        {
          "step": 2,
          "event": "before_statement",
          "focus": "return n > 0 and (n & (n - 1)) == 0",
          "node_id": 3
        },
        {
          "step": 3,
          "event": "before_expression",
          "focus": "n > 0 and (n & (n - 1)) == 0",
          "node_id": 5
        },
        {
          "step": 4,
          "event": "before_expression",
          "focus": "n > 0",
          "node_id": 7
        },
        {
          "step": 5,
          "event": "before_expression",
          "focus": "n",
          "node_id": 9
        },
        {
          "step": 6,
          "event": "after_expression",
          "focus": "n",
          "node_id": 9,
          "value": 16
        },
        {
          "step": 7,
          "event": "after_expression",
          "focus": "n > 0",
          "node_id": 7,
          "value": true
        },
        {
          "step": 8,
          "event": "before_expression",
          "focus": "(n & (n - 1)) == 0",
          "node_id": 8
        },
        {
          "step": 9,
          "event": "before_expression",
          "focus": "n & (n - 1)",
          "node_id": 12
        },
        {
          "step": 10,
          "event": "before_expression",
          "focus": "n",
          "node_id": 16
        },
        {
          "step": 11,
          "event": "after_expression",
          "focus": "n",
          "node_id": 16,
          "value": 16
        },
        {
          "step": 12,
          "event": "before_expression",
          "focus": "n - 1",
          "node_id": 18
        },
        {
          "step": 13,
          "event": "before_expression",
          "focus": "n",
          "node_id": 19
        },
        {
          "step": 14,
          "event": "after_expression",
          "focus": "n",
          "node_id": 19,
          "value": 16
        },
        {
          "step": 15,
          "event": "after_expression",
          "focus": "n - 1",
          "node_id": 18,
          "value": 15
        },
        {
          "step": 16,
          "event": "after_expression",
          "focus": "n & (n - 1)",
          "node_id": 12,
          "value": 0
        },
        {
          "step": 17,
          "event": "after_expression",
          "focus": "(n & (n - 1)) == 0",
          "node_id": 8,
          "value": true
        },
        {
          "step": 18,
          "event": "after_expression",
          "focus": "n > 0 and (n & (n - 1)) == 0",
          "node_id": 5,
          "value": true
        }
      ]
    }
  ],
  "result": true
}