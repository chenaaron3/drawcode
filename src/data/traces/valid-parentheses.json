{
  "metadata": {
    "code": "def isValid(s):\n    stack = []\n    mapping = {')': '(', '}': '{', ']': '['}\n    \n    for char in s:\n        if char in mapping:\n            if not stack or stack.pop() != mapping[char]:\n                return False\n        else:\n            stack.append(char)\n    \n    return not stack\n",
    "function": "isValid",
    "inputs": {
      "kwargs": {
        "s": "'()[]{}'"
      }
    },
    "stdout": "<ast.List object at 0x104351190>\nError executing code: 'List' object has no attribute 'type'\n",
    "finalLocals": {}
  },
  "ast": {
    "node_id": 0,
    "children_node_ids": [
      1
    ],
    "type": "Module",
    "body": [
      {
        "node_id": 1,
        "children_node_ids": [
          2,
          3,
          4,
          5,
          6
        ],
        "type": "FunctionDef",
        "parent_node_id": 0,
        "location": {
          "lineno": 1,
          "col_offset": 0,
          "end_lineno": 12,
          "end_col_offset": 20
        },
        "focus": "def isValid(s):\n    stack = []\n    mapping = {')': '(', '}': '{', ']': '['}\n    \n    for char in s:\n        if char in mapping:\n            if not stack or stack.pop() != mapping[char]:\n                return False\n        else:\n            stack.append(char)\n    \n    return not stack",
        "name": "isValid",
        "args": {
          "node_id": 2,
          "children_node_ids": [
            7
          ],
          "type": "arguments",
          "parent_node_id": 1,
          "posonlyargs": [],
          "args": [
            {
              "node_id": 7,
              "children_node_ids": [],
              "type": "arg",
              "parent_node_id": 2,
              "location": {
                "lineno": 1,
                "col_offset": 12,
                "end_lineno": 1,
                "end_col_offset": 13
              },
              "focus": "s",
              "arg": "s"
            }
          ],
          "kwonlyargs": [],
          "kw_defaults": [],
          "defaults": []
        },
        "body": [
          {
            "node_id": 3,
            "children_node_ids": [
              8,
              9
            ],
            "type": "Assign",
            "parent_node_id": 1,
            "location": {
              "lineno": 2,
              "col_offset": 4,
              "end_lineno": 2,
              "end_col_offset": 14
            },
            "focus": "stack = []",
            "targets": [
              {
                "node_id": 8,
                "children_node_ids": [
                  16
                ],
                "type": "Name",
                "parent_node_id": 3,
                "location": {
                  "lineno": 2,
                  "col_offset": 4,
                  "end_lineno": 2,
                  "end_col_offset": 9
                },
                "focus": "stack",
                "id": "stack",
                "ctx": {
                  "node_id": 16,
                  "children_node_ids": [],
                  "type": "Store",
                  "parent_node_id": 8
                }
              }
            ],
            "value": {
              "node_id": 9,
              "children_node_ids": [
                17
              ],
              "type": "List",
              "parent_node_id": 3,
              "location": {
                "lineno": 2,
                "col_offset": 12,
                "end_lineno": 2,
                "end_col_offset": 14
              },
              "focus": "[]",
              "elts": [],
              "ctx": {
                "node_id": 17,
                "children_node_ids": [],
                "type": "Load",
                "parent_node_id": 9
              }
            }
          },
          {
            "node_id": 4,
            "children_node_ids": [
              10,
              11
            ],
            "type": "Assign",
            "parent_node_id": 1,
            "location": {
              "lineno": 3,
              "col_offset": 4,
              "end_lineno": 3,
              "end_col_offset": 44
            },
            "focus": "mapping = {')': '(', '}': '{', ']': '['}",
            "targets": [
              {
                "node_id": 10,
                "children_node_ids": [
                  16
                ],
                "type": "Name",
                "parent_node_id": 4,
                "location": {
                  "lineno": 3,
                  "col_offset": 4,
                  "end_lineno": 3,
                  "end_col_offset": 11
                },
                "focus": "mapping",
                "id": "mapping",
                "ctx": {
                  "node_id": 16,
                  "children_node_ids": [],
                  "type": "Store",
                  "parent_node_id": 10
                }
              }
            ],
            "value": {
              "node_id": 11,
              "children_node_ids": [
                18,
                19,
                20,
                21,
                22,
                23
              ],
              "type": "Dict",
              "parent_node_id": 4,
              "location": {
                "lineno": 3,
                "col_offset": 14,
                "end_lineno": 3,
                "end_col_offset": 44
              },
              "focus": "{')': '(', '}': '{', ']': '['}",
              "keys": [
                {
                  "node_id": 18,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 15,
                    "end_lineno": 3,
                    "end_col_offset": 18
                  },
                  "focus": "')'",
                  "value": ")"
                },
                {
                  "node_id": 19,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 25,
                    "end_lineno": 3,
                    "end_col_offset": 28
                  },
                  "focus": "'}'",
                  "value": "}"
                },
                {
                  "node_id": 20,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 35,
                    "end_lineno": 3,
                    "end_col_offset": 38
                  },
                  "focus": "']'",
                  "value": "]"
                }
              ],
              "values": [
                {
                  "node_id": 21,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 20,
                    "end_lineno": 3,
                    "end_col_offset": 23
                  },
                  "focus": "'('",
                  "value": "("
                },
                {
                  "node_id": 22,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 30,
                    "end_lineno": 3,
                    "end_col_offset": 33
                  },
                  "focus": "'{'",
                  "value": "{"
                },
                {
                  "node_id": 23,
                  "children_node_ids": [],
                  "type": "Constant",
                  "parent_node_id": 11,
                  "location": {
                    "lineno": 3,
                    "col_offset": 40,
                    "end_lineno": 3,
                    "end_col_offset": 43
                  },
                  "focus": "'['",
                  "value": "["
                }
              ]
            }
          },
          {
            "node_id": 5,
            "children_node_ids": [
              12,
              13,
              14
            ],
            "type": "For",
            "parent_node_id": 1,
            "location": {
              "lineno": 5,
              "col_offset": 4,
              "end_lineno": 10,
              "end_col_offset": 30
            },
            "focus": "for char in s:\n        if char in mapping:\n            if not stack or stack.pop() != mapping[char]:\n                return False\n        else:\n            stack.append(char)",
            "target": {
              "node_id": 12,
              "children_node_ids": [
                16
              ],
              "type": "Name",
              "parent_node_id": 5,
              "location": {
                "lineno": 5,
                "col_offset": 8,
                "end_lineno": 5,
                "end_col_offset": 12
              },
              "focus": "char",
              "id": "char",
              "ctx": {
                "node_id": 16,
                "children_node_ids": [],
                "type": "Store",
                "parent_node_id": 12
              }
            },
            "iter": {
              "node_id": 13,
              "children_node_ids": [
                17
              ],
              "type": "Name",
              "parent_node_id": 5,
              "location": {
                "lineno": 5,
                "col_offset": 16,
                "end_lineno": 5,
                "end_col_offset": 17
              },
              "focus": "s",
              "id": "s",
              "ctx": {
                "node_id": 17,
                "children_node_ids": [],
                "type": "Load",
                "parent_node_id": 13
              }
            },
            "body": [
              {
                "node_id": 14,
                "children_node_ids": [
                  24,
                  25,
                  26
                ],
                "type": "If",
                "parent_node_id": 5,
                "location": {
                  "lineno": 6,
                  "col_offset": 8,
                  "end_lineno": 10,
                  "end_col_offset": 30
                },
                "focus": "if char in mapping:\n            if not stack or stack.pop() != mapping[char]:\n                return False\n        else:\n            stack.append(char)",
                "test": {
                  "node_id": 24,
                  "children_node_ids": [
                    29,
                    30,
                    31
                  ],
                  "type": "Compare",
                  "parent_node_id": 14,
                  "location": {
                    "lineno": 6,
                    "col_offset": 11,
                    "end_lineno": 6,
                    "end_col_offset": 26
                  },
                  "focus": "char in mapping",
                  "left": {
                    "node_id": 29,
                    "children_node_ids": [
                      17
                    ],
                    "type": "Name",
                    "parent_node_id": 24,
                    "location": {
                      "lineno": 6,
                      "col_offset": 11,
                      "end_lineno": 6,
                      "end_col_offset": 15
                    },
                    "focus": "char",
                    "id": "char",
                    "ctx": {
                      "node_id": 17,
                      "children_node_ids": [],
                      "type": "Load",
                      "parent_node_id": 29
                    }
                  },
                  "ops": [
                    {
                      "node_id": 30,
                      "children_node_ids": [],
                      "type": "In",
                      "parent_node_id": 24
                    }
                  ],
                  "comparators": [
                    {
                      "node_id": 31,
                      "children_node_ids": [
                        17
                      ],
                      "type": "Name",
                      "parent_node_id": 24,
                      "location": {
                        "lineno": 6,
                        "col_offset": 19,
                        "end_lineno": 6,
                        "end_col_offset": 26
                      },
                      "focus": "mapping",
                      "id": "mapping",
                      "ctx": {
                        "node_id": 17,
                        "children_node_ids": [],
                        "type": "Load",
                        "parent_node_id": 31
                      }
                    }
                  ]
                },
                "body": [
                  {
                    "node_id": 25,
                    "children_node_ids": [
                      32,
                      33
                    ],
                    "type": "If",
                    "parent_node_id": 14,
                    "location": {
                      "lineno": 7,
                      "col_offset": 12,
                      "end_lineno": 8,
                      "end_col_offset": 28
                    },
                    "focus": "if not stack or stack.pop() != mapping[char]:\n                return False",
                    "test": {
                      "node_id": 32,
                      "children_node_ids": [
                        35,
                        36,
                        37
                      ],
                      "type": "BoolOp",
                      "parent_node_id": 25,
                      "location": {
                        "lineno": 7,
                        "col_offset": 15,
                        "end_lineno": 7,
                        "end_col_offset": 56
                      },
                      "focus": "not stack or stack.pop() != mapping[char]",
                      "op": {
                        "node_id": 35,
                        "children_node_ids": [],
                        "type": "Or",
                        "parent_node_id": 32
                      },
                      "values": [
                        {
                          "node_id": 36,
                          "children_node_ids": [
                            27,
                            41
                          ],
                          "type": "UnaryOp",
                          "parent_node_id": 32,
                          "location": {
                            "lineno": 7,
                            "col_offset": 15,
                            "end_lineno": 7,
                            "end_col_offset": 24
                          },
                          "focus": "not stack",
                          "op": {
                            "node_id": 27,
                            "children_node_ids": [],
                            "type": "Not",
                            "parent_node_id": 36
                          },
                          "operand": {
                            "node_id": 41,
                            "children_node_ids": [
                              17
                            ],
                            "type": "Name",
                            "parent_node_id": 36,
                            "location": {
                              "lineno": 7,
                              "col_offset": 19,
                              "end_lineno": 7,
                              "end_col_offset": 24
                            },
                            "focus": "stack",
                            "id": "stack",
                            "ctx": {
                              "node_id": 17,
                              "children_node_ids": [],
                              "type": "Load",
                              "parent_node_id": 41
                            }
                          }
                        },
                        {
                          "node_id": 37,
                          "children_node_ids": [
                            42,
                            43,
                            44
                          ],
                          "type": "Compare",
                          "parent_node_id": 32,
                          "location": {
                            "lineno": 7,
                            "col_offset": 28,
                            "end_lineno": 7,
                            "end_col_offset": 56
                          },
                          "focus": "stack.pop() != mapping[char]",
                          "left": {
                            "node_id": 42,
                            "children_node_ids": [
                              46
                            ],
                            "type": "Call",
                            "parent_node_id": 37,
                            "location": {
                              "lineno": 7,
                              "col_offset": 28,
                              "end_lineno": 7,
                              "end_col_offset": 39
                            },
                            "focus": "stack.pop()",
                            "func": {
                              "node_id": 46,
                              "children_node_ids": [
                                49,
                                17
                              ],
                              "type": "Attribute",
                              "parent_node_id": 42,
                              "location": {
                                "lineno": 7,
                                "col_offset": 28,
                                "end_lineno": 7,
                                "end_col_offset": 37
                              },
                              "focus": "stack.pop",
                              "value": {
                                "node_id": 49,
                                "children_node_ids": [
                                  17
                                ],
                                "type": "Name",
                                "parent_node_id": 46,
                                "location": {
                                  "lineno": 7,
                                  "col_offset": 28,
                                  "end_lineno": 7,
                                  "end_col_offset": 33
                                },
                                "focus": "stack",
                                "id": "stack",
                                "ctx": {
                                  "node_id": 17,
                                  "children_node_ids": [],
                                  "type": "Load",
                                  "parent_node_id": 49
                                }
                              },
                              "attr": "pop",
                              "ctx": {
                                "node_id": 17,
                                "children_node_ids": [],
                                "type": "Load",
                                "parent_node_id": 46
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "ops": [
                            {
                              "node_id": 43,
                              "children_node_ids": [],
                              "type": "NotEq",
                              "parent_node_id": 37
                            }
                          ],
                          "comparators": [
                            {
                              "node_id": 44,
                              "children_node_ids": [
                                47,
                                48,
                                17
                              ],
                              "type": "Subscript",
                              "parent_node_id": 37,
                              "location": {
                                "lineno": 7,
                                "col_offset": 43,
                                "end_lineno": 7,
                                "end_col_offset": 56
                              },
                              "focus": "mapping[char]",
                              "value": {
                                "node_id": 47,
                                "children_node_ids": [
                                  17
                                ],
                                "type": "Name",
                                "parent_node_id": 44,
                                "location": {
                                  "lineno": 7,
                                  "col_offset": 43,
                                  "end_lineno": 7,
                                  "end_col_offset": 50
                                },
                                "focus": "mapping",
                                "id": "mapping",
                                "ctx": {
                                  "node_id": 17,
                                  "children_node_ids": [],
                                  "type": "Load",
                                  "parent_node_id": 47
                                }
                              },
                              "slice": {
                                "node_id": 48,
                                "children_node_ids": [
                                  17
                                ],
                                "type": "Name",
                                "parent_node_id": 44,
                                "location": {
                                  "lineno": 7,
                                  "col_offset": 51,
                                  "end_lineno": 7,
                                  "end_col_offset": 55
                                },
                                "focus": "char",
                                "id": "char",
                                "ctx": {
                                  "node_id": 17,
                                  "children_node_ids": [],
                                  "type": "Load",
                                  "parent_node_id": 48
                                }
                              },
                              "ctx": {
                                "node_id": 17,
                                "children_node_ids": [],
                                "type": "Load",
                                "parent_node_id": 44
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "body": [
                      {
                        "node_id": 33,
                        "children_node_ids": [
                          38
                        ],
                        "type": "Return",
                        "parent_node_id": 25,
                        "location": {
                          "lineno": 8,
                          "col_offset": 16,
                          "end_lineno": 8,
                          "end_col_offset": 28
                        },
                        "focus": "return False",
                        "value": {
                          "node_id": 38,
                          "children_node_ids": [],
                          "type": "Constant",
                          "parent_node_id": 33,
                          "location": {
                            "lineno": 8,
                            "col_offset": 23,
                            "end_lineno": 8,
                            "end_col_offset": 28
                          },
                          "focus": "False",
                          "value": false
                        }
                      }
                    ],
                    "orelse": []
                  }
                ],
                "orelse": [
                  {
                    "node_id": 26,
                    "children_node_ids": [
                      34
                    ],
                    "type": "Expr",
                    "parent_node_id": 14,
                    "location": {
                      "lineno": 10,
                      "col_offset": 12,
                      "end_lineno": 10,
                      "end_col_offset": 30
                    },
                    "focus": "stack.append(char)",
                    "value": {
                      "node_id": 34,
                      "children_node_ids": [
                        39,
                        40
                      ],
                      "type": "Call",
                      "parent_node_id": 26,
                      "location": {
                        "lineno": 10,
                        "col_offset": 12,
                        "end_lineno": 10,
                        "end_col_offset": 30
                      },
                      "focus": "stack.append(char)",
                      "func": {
                        "node_id": 39,
                        "children_node_ids": [
                          45,
                          17
                        ],
                        "type": "Attribute",
                        "parent_node_id": 34,
                        "location": {
                          "lineno": 10,
                          "col_offset": 12,
                          "end_lineno": 10,
                          "end_col_offset": 24
                        },
                        "focus": "stack.append",
                        "value": {
                          "node_id": 45,
                          "children_node_ids": [
                            17
                          ],
                          "type": "Name",
                          "parent_node_id": 39,
                          "location": {
                            "lineno": 10,
                            "col_offset": 12,
                            "end_lineno": 10,
                            "end_col_offset": 17
                          },
                          "focus": "stack",
                          "id": "stack",
                          "ctx": {
                            "node_id": 17,
                            "children_node_ids": [],
                            "type": "Load",
                            "parent_node_id": 45
                          }
                        },
                        "attr": "append",
                        "ctx": {
                          "node_id": 17,
                          "children_node_ids": [],
                          "type": "Load",
                          "parent_node_id": 39
                        }
                      },
                      "args": [
                        {
                          "node_id": 40,
                          "children_node_ids": [
                            17
                          ],
                          "type": "Name",
                          "parent_node_id": 34,
                          "location": {
                            "lineno": 10,
                            "col_offset": 25,
                            "end_lineno": 10,
                            "end_col_offset": 29
                          },
                          "focus": "char",
                          "id": "char",
                          "ctx": {
                            "node_id": 17,
                            "children_node_ids": [],
                            "type": "Load",
                            "parent_node_id": 40
                          }
                        }
                      ],
                      "keywords": []
                    }
                  }
                ]
              }
            ],
            "orelse": []
          },
          {
            "node_id": 6,
            "children_node_ids": [
              15
            ],
            "type": "Return",
            "parent_node_id": 1,
            "location": {
              "lineno": 12,
              "col_offset": 4,
              "end_lineno": 12,
              "end_col_offset": 20
            },
            "focus": "return not stack",
            "value": {
              "node_id": 15,
              "children_node_ids": [
                27,
                28
              ],
              "type": "UnaryOp",
              "parent_node_id": 6,
              "location": {
                "lineno": 12,
                "col_offset": 11,
                "end_lineno": 12,
                "end_col_offset": 20
              },
              "focus": "not stack",
              "op": {
                "node_id": 27,
                "children_node_ids": [],
                "type": "Not",
                "parent_node_id": 15
              },
              "operand": {
                "node_id": 28,
                "children_node_ids": [
                  17
                ],
                "type": "Name",
                "parent_node_id": 15,
                "location": {
                  "lineno": 12,
                  "col_offset": 15,
                  "end_lineno": 12,
                  "end_col_offset": 20
                },
                "focus": "stack",
                "id": "stack",
                "ctx": {
                  "node_id": 17,
                  "children_node_ids": [],
                  "type": "Load",
                  "parent_node_id": 28
                }
              }
            }
          }
        ],
        "decorator_list": [],
        "type_params": []
      }
    ],
    "type_ignores": []
  },
  "relationships": [
    {
      "container": "s",
      "cursor": "char",
      "type": "value_index",
      "node_id": 5
    },
    {
      "container": "mapping",
      "cursor": "char",
      "type": "membership_test",
      "node_id": 24
    },
    {
      "container": "mapping",
      "cursor": "char",
      "type": "key_access",
      "node_id": 44
    }
  ],
  "trace": [],
  "result": null
}